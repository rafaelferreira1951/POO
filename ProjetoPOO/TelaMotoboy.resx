<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lQAAAABJRU5ErkJggg==
</value>
  </data>
</root>